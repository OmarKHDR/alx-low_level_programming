#!/usr/bin/make -f
# 100-Makefile

# Compiler
CC := gcc

# Source files
SRC := main.c file1.c file2.c

# Object files (automatically generated from source files)
OBJ := $(SRC:.c=.o)

# Executable name
NAME := school

# Program to delete files
RM := rm -f

# Compiler flags
CFLAGS := -Wall -Werror -Wextra -pedantic

# Main rule - builds the executable
all: $(NAME)

# Rule to build the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) -o $@ $^

# Rule to delete Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ \#* $(NAME) $(OBJ)

# Rule to delete object files
oclean:
	$(RM) $(OBJ)

# Rule to delete Emacs and Vim temporary files, the executable, and object files
fclean: clean

# Rule to force recompilation of all source files
re: fclean all

# Ensure that m.h is present
$(SRC): m.h

# .PHONY tells make that these rules don't represent files
.PHONY: all clean oclean fclean re